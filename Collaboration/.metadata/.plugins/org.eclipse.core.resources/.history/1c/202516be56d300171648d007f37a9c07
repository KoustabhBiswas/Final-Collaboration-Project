package com.niit.Collaboration_Back.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
/*import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;*/
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.niit.Collaboration_Back.dao.BlogDao;
import com.niit.Collaboration_Back.dao.UserDao;
import com.niit.Collaboration_Back.model.Blog;
import com.niit.Collaboration_Back.model.Users;

@RestController
public class UserController {
	@Autowired
	BlogDao blogDao;
	@Autowired
	Blog blog;
	 @Autowired
	 Users newuser;
	 @Autowired
	 UserDao userDao;
	@ResponseBody
	@GetMapping(value="/get",   produces="application/json")	
	public List<Blog> getuser(){
		System.out.println("Test");
		List<Blog> list = blogDao.getAllBlog() ;
		 for(Blog b : list) {
			 System.out.println(b.getBlogName());
		 }
		return list;
	}
	@RequestMapping("/")
	public ModelAndView test() {
		return new ModelAndView("index");
	}
	
	@RequestMapping(value="/register" ,method=RequestMethod.POST, consumes=MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Users> registerUser(@RequestBody Users user) {
		 
	userDao.saveUser(user);
	System.out.println("In RestController 2");
		 return new ResponseEntity<Users>(newuser, HttpStatus.OK);
	}
	@RequestMapping(value="/login" ,method=RequestMethod.POST , consumes=MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Users> login(@RequestBody Users user){
 		/*Users u = userDao.getByUsername(user.getEmailId());
		List<Users> list = userDao.getAll();
		Users u1  = (Users) list;
		for(Users u : list) {
			if(user.getEmailId() == u.getEmailId() && user.getPassword() == u.getPassword()) {
				return new ResponseEntity<Users>(HttpStatus.OK);
			}else {
				return new ResponseEntity<Users>(HttpStatus.NOT_FOUND);
			}
		}
		
		if(u.getPassword().equals(user.getPassword())) {
			return new ResponseEntity<Users>(u,HttpStatus.OK);
		}else {
			return new ResponseEntity<Users>(u,HttpStatus.NOT_FOUND);
		}
		if(userDao.validateUser(user)) {
			return new ResponseEntity<Users>(user,HttpStatus.OK);
		}else {
			return new ResponseEntity<Users>(user,HttpStatus.NOT_FOUND);
		}*/
		List<Users> list = userDao.getAll();
		Users u  = (Users) list;
		if(user.getEmailId() == u.getEmailId() && user.getPassword() == u.getPassword()) {
			return new ResponseEntity<Users>(HttpStatus.OK);
		}
	}

}
